--- CMakeLists.txt.bak	2011-02-06 00:11:44.308296005 +0600
+++ CMakeLists.txt	2011-02-06 00:15:41.065296004 +0600
@@ -77,7 +77,7 @@
 if(LUXRAYS_DISABLE_OPENCL)
     set(OCL_LIBRARY "")
 else(LUXRAYS_DISABLE_OPENCL)
-    find_path(OCL_INCLUDE_PATH NAMES CL/cl.hpp OpenCL/cl.hpp PATHS /home/david/src/ati-stream-sdk-v2.3-lnx64/include /usr/local/cuda/include)
+	find_path(OCL_INCLUDE_PATH NAMES CL/cl.hpp OpenCL/cl.hpp PATHS /opt/ati-stream-sdk-bin-2.2/include)
     find_library(OCL_LIBRARY OpenCL /home/david/src/ati-stream-sdk-v2.3-lnx64/lib/x86_64)
 
     message(STATUS "OpenCL include directory: " ${OCL_INCLUDE_PATH})
@@ -146,31 +146,10 @@
 #
 #############################################################################
 
-if(APPLE)
-    find_path(FREEIMAGE_INCLUDE_DIRS
-    	freeimage.h
-    	PATHS
-		../macos//include
-		NO_DEFAULT_PATH
-	)
-    find_library(FREEIMAGE_LIBRARIES
-    	libfreeimage.a
-    	PATHS
-		../macos//lib
-		NO_DEFAULT_PATH
-	)
-else(APPLE)
-	find_package(FreeImage REQUIRED)
-
-	if(FREEIMAGE_FOUND)
-		message(STATUS "FreeImage library directory: " ${FREEIMAGE_LIBRARIES})
-		message(STATUS "FreeImage include directory: " ${FREEIMAGE_INCLUDE_PATH})
-	else(FREEIMAGE_FOUND)
-		 message(FATAL_ERROR "Could not find FreeImage")
-	endif(FREEIMAGE_FOUND)
-
-	include_directories("${FREEIMAGE_INCLUDE_PATH}")
-endif(APPLE)
+SET(FREEIMAGE_FOUND 1)
+SET(FREEIMAGE_INCLUDE_DIR ${HOME}/include)
+SET(FREEIMAGE_LIBRARY ${HOME}/lib)
+SET(FREEIMAGE_LIBRARIES libfreeimage.a)
 
 #############################################################################
 #
@@ -193,7 +172,7 @@
 #
 #############################################################################
 
-find_package(Doxygen)
+# find_package(Doxygen)
 
 if(DOXYGEN_FOUND)
         message(STATUS "Found Doxygen and generating LuxRays documentation")
@@ -240,11 +219,13 @@
 #############################################################################
 
 if(NOT APPLE)
-	set(CMAKE_CXX_FLAGS_DEBUG "-Wall -msse -msse2 -msse3 -mssse3 -fPIC -O0 -g")
+	# set(CMAKE_CXX_FLAGS_DEBUG "-Wall -msse -msse2 -msse3 -mssse3 -fPIC -O0 -g")
 	# NOTE: QBVH can not be compiled with -O3 because of a GCC bug
-	set(CMAKE_CXX_FLAGS_RELEASE "-DNDEBUG -Wall -fPIC -O3 -ftree-vectorize -msse -msse2 -msse3 -mssse3 -fvariable-expansion-in-unroller")
+	# set(CMAKE_CXX_FLAGS_RELEASE "-DNDEBUG -Wall -fPIC -O3 -ftree-vectorize -msse -msse2 -msse3 -mssse3 -fvariable-expansion-in-unroller")
 	#The QBVH accelerator needs to be compiled with much reduced optimizations
 	# otherwise gcc produces incorrect code and ruins the render on 64bits machines
+	
+	ADD_DEFINITIONS(__MY_COMPILER_FLAGS__)
 
 	set_SOURCE_FILES_PROPERTIES(${LUXRAYS_SOURCE_DIR}/accelerators/qbvhaccel.cpp COMPILE_FLAGS "-O2")
 	set_SOURCE_FILES_PROPERTIES(${LUXRAYS_SOURCE_DIR}/accelerators/mqbvhaccel.cpp COMPILE_FLAGS "-O2")
